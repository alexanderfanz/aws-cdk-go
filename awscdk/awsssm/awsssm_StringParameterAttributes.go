package awsssm


// Attributes for parameters of various types of string.
//
// Example:
//   // Retrieve the latest value of the non-secret parameter
//   // with name "/My/String/Parameter".
//   stringValue := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String("MyValue"), &stringParameterAttributes{
//   	parameterName: jsii.String("/My/Public/Parameter"),
//   }).stringValue
//   stringValueVersionFromToken := ssm.stringParameter.fromStringParameterAttributes(this, jsii.String("MyValueVersionFromToken"), &stringParameterAttributes{
//   	parameterName: jsii.String("/My/Public/Parameter"),
//   	// parameter version from token
//   	version: parameterVersion,
//   }).stringValue
//
//   // Retrieve a specific version of the secret (SecureString) parameter.
//   // 'version' is always required.
//   secretValue := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String("MySecureValue"), &secureStringParameterAttributes{
//   	parameterName: jsii.String("/My/Secret/Parameter"),
//   	version: jsii.Number(5),
//   })
//   secretValueVersionFromToken := ssm.stringParameter.fromSecureStringParameterAttributes(this, jsii.String("MySecureValueVersionFromToken"), &secureStringParameterAttributes{
//   	parameterName: jsii.String("/My/Secret/Parameter"),
//   	// parameter version from token
//   	version: parameterVersion,
//   })
//
// See: ParameterType.
//
// Experimental.
type StringParameterAttributes struct {
	// The name of the parameter store value.
	//
	// This value can be a token or a concrete string. If it is a concrete string
	// and includes "/" it must also be prefixed with a "/" (fully-qualified).
	// Experimental.
	ParameterName *string `field:"required" json:"parameterName" yaml:"parameterName"`
	// Indicates of the parameter name is a simple name (i.e. does not include "/" separators).
	//
	// This is only required only if `parameterName` is a token, which means we
	// are unable to detect if the name is simple or "path-like" for the purpose
	// of rendering SSM parameter ARNs.
	//
	// If `parameterName` is not specified, `simpleName` must be `true` (or
	// undefined) since the name generated by AWS CloudFormation is always a
	// simple name.
	// Experimental.
	SimpleName *bool `field:"optional" json:"simpleName" yaml:"simpleName"`
	// The type of the string parameter.
	// Experimental.
	Type ParameterType `field:"optional" json:"type" yaml:"type"`
	// The version number of the value you wish to retrieve.
	// Experimental.
	Version *float64 `field:"optional" json:"version" yaml:"version"`
}

